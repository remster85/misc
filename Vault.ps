# Vault Configuration
$VAULT_ADDR = "http://your-vault-server:8200"   # Replace with your Vault server URL
$VAULT_TOKEN = "your-vault-token"               # Replace with your Vault token
$NAMESPACE = "xyz"                              # Vault namespace
$MOUNT_PATH = "secret"                          # KV v2 mount path

# Set Headers
$headers = @{
    "X-Vault-Token" = $VAULT_TOKEN
    "X-Vault-Namespace" = $NAMESPACE  # Set namespace for multi-tenancy support
}

function Get-VaultSecretsRecursive {
    param (
        [string]$path = ""
    )

    # Build the Vault API URL for listing secrets (KV v2 metadata path)
    $fullPath = "$VAULT_ADDR/v1/$MOUNT_PATH/metadata/$path" -replace "/$", ""
    
    try {
        # Make API request
        $response = Invoke-RestMethod -Uri $fullPath -Method GET -Headers $headers
        $keys = $response.data.keys

        $secrets = @()
        foreach ($key in $keys) {
            if ($key -match "/$") {
                # If the key ends with "/", it's a folder; recurse into it
                $secrets += Get-VaultSecretsRecursive -path "$path$key"
            } else {
                $secrets += "$path$key"
            }
        }

        return $secrets
    } catch {
        # Handle cases where path doesn't exist or no access
        return @()
    }
}

# Get all secrets recursively
$secrets = Get-VaultSecretsRecursive

# Output the list of secrets
Write-Host "Secrets under namespace '$NAMESPACE' in '$MOUNT_PATH':"
$secrets | ForEach-Object { Write-Host "- $_" }
