SELECT
    t1.ref_id,
    STRING_AGG(
        CASE
            WHEN t1.name IS DISTINCT FROM t2.name THEN 'name: ' || COALESCE(t1.name, 'NULL') || ' -> ' || COALESCE(t2.name, 'NULL')
            WHEN t1.address IS DISTINCT FROM t2.address THEN 'address: ' || COALESCE(t1.address, 'NULL') || ' -> ' || COALESCE(t2.address, 'NULL')
            WHEN t1.age IS DISTINCT FROM t2.age THEN 'age: ' || COALESCE(t1.age::TEXT, 'NULL') || ' -> ' || COALESCE(t2.age::TEXT, 'NULL')
            WHEN t1.salary IS DISTINCT FROM t2.salary THEN 'salary: ' || COALESCE(t1.salary::TEXT, 'NULL') || ' -> ' || COALESCE(t2.salary::TEXT, 'NULL')
        END,
        ', '
    ) AS fields_in_difference
FROM
    t1
JOIN
    t2 ON t1.ref_id = t2.ref_id
WHERE
    t1.name IS DISTINCT FROM t2.name OR
    t1.address IS DISTINCT FROM t2.address OR
    t1.age IS DISTINCT FROM t2.age OR
    t1.salary IS DISTINCT FROM t2.salary
GROUP BY
    t1.ref_id;




CREATE OR REPLACE FUNCTION compare_tables_dynamic(table1 TEXT, table2 TEXT)
RETURNS TABLE (
    ref_id INT,
    fields_in_difference TEXT
) AS $$
DECLARE
    col RECORD;
    diff_query TEXT;
    field_conditions TEXT := '';
BEGIN
    -- Build the dynamic condition for field comparisons
    FOR col IN
        SELECT column_name
        FROM information_schema.columns
        WHERE table_schema = 'public'
          AND table_name = table1
          AND column_name NOT IN ('ref_id') -- Exclude the primary key
    LOOP
        field_conditions := field_conditions || format(
            'WHEN t1.%I IS DISTINCT FROM t2.%I THEN ''%I: '' || COALESCE(t1.%I::TEXT, ''NULL'') || '' -> '' || COALESCE(t2.%I::TEXT, ''NULL'') || '' , '' ',
            col.column_name, col.column_name, col.column_name, col.column_name, col.column_name
        );
    END LOOP;

    -- Remove the trailing comma from field conditions
    field_conditions := rtrim(field_conditions, ' , ');

    -- Construct the final dynamic query
    diff_query := format(
        'SELECT t1.ref_id, 
            STRING_AGG(
                CASE %s END, ''''
            ) AS fields_in_difference
        FROM %I t1
        JOIN %I t2 ON t1.ref_id = t2.ref_id
        WHERE EXISTS (
            SELECT 1 FROM %I t1_inner 
            JOIN %I t2_inner ON t1_inner.ref_id = t2_inner.ref_id 
            WHERE %s
        )
        GROUP BY t1.ref_id;',
        field_conditions, table1, table2, table1, table2, field_conditions
    );

    -- Execute the dynamically built query
    RETURN QUERY EXECUTE diff_query;
END;
$$ LANGUAGE plpgsql;



